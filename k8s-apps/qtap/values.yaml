qtap:
  image:
    repository: us-docker.pkg.dev/qpoint-edge/public/qtap
    pullPolicy: IfNotPresent

  registrationEndpoint: "https://api.qpoint.io"

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""

  securityContext:
    allowPrivilegeEscalation: true
    capabilities:
      add: ["CAP_BPF", "CAP_SYS_ADMIN"]
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    privileged: true

  # One of debug, info, warn, error, dpanic, panic, fatal
  logLevel: "panic"

  # One of console, json
  logEncoding: "console"

  status:
    addr: 0.0.0.0
    port: 10001

  middlewareEgress:
    addr: 127.0.0.1
    port: 11001

  resources:
    limits:
      cpu: 4000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  volumes:
    - name: sys
      hostPath:
        path: /sys
        type: Directory

  volumeMounts:
    - name: sys
      mountPath: "/sys"
      readOnly: true

  integrations:
    containerd:
      enabled: true
      hostSocketPath: /run/containerd/containerd.sock

  # API token
  registrationToken: ""
  # OR
  # registrationTokenSecretRefName: ""

  config: |
    version: 2

    services:
      event_stores: []
      object_stores:
        - id: console_stdout
          type: stdout

    stacks:
      default_stack: # Stack Name
        plugins:
          - type: access_logs
            config:
              mode: summary # Default action (summary|details|full)
              format: console # (json|console)
              rules:
                - name: Log errors
                  expr: response.status >= 400
                  mode: full
                - name: Ignore loki requests
                  expr: request.host =~ /loki.*/
                  mode: none

    tap:
      direction: all
      ignore_loopback: true
      audit_include_dns: true
      filters:
        groups:
          - kubernetes
          - qpoint
          - container
      http:
        stack: default_stack

  extraEnv: []
