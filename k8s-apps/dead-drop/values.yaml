dead-drop:
  configMaps:
    config:
      data:
        DEAD_DROP_DB_HOST: "libsql-server"
        DEAD_DROP_DB_PORT: "8080"
        DEAD_DROP_ADDRESS: "0.0.0.0"

  controllers:
    server:
      type: deployment
      annotations:
        reloader.stakater.com/auto: "true"
      initContainers:
        init:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: main@sha256:898d3e05fb175279c3c2f8e7b8cabd41803ef4c1418fa5b02521b3c79f3271c6
          args:
            - init
          envFrom:
            - configMapRef:
                identifier: config
      # TODO: release 0.15.0
      # pod:
      #   annotations:
      #     instrumentation.opentelemetry.io/inject-go: opentelemetry-collector/go
      #     instrumentation.opentelemetry.io/otel-go-auto-target-exe: /app
      containers:
        main:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: main@sha256:898d3e05fb175279c3c2f8e7b8cabd41803ef4c1418fa5b02521b3c79f3271c6
          args:
            - serve
          ports:
            - name: http
              containerPort: 3000
          envFrom:
            - configMapRef:
                identifier: config
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
      strategy: Recreate

    purge:
      type: cronjob
      cronjob:
        schedule: "0 * * * *"
      containers:
        main:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: main@sha256:898d3e05fb175279c3c2f8e7b8cabd41803ef4c1418fa5b02521b3c79f3271c6
          args:
            - purge
          envFrom:
            - configMapRef:
                identifier: config

  service:
    main:
      controller: server
      type: ClusterIP
      ports:
        http:
          port: 3000

  ingress:
    main:
      enabled: true
      className: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Dead Drop"
        gethomepage.dev/description: "A secure, ephemeral file sharing service."
        gethomepage.dev/group: "Apps"
        gethomepage.dev/icon: "mdi-file-key"

      hosts:
        - host: dead-drop.terence.cloud
          paths:
            - path: /
              pathType: ImplementationSpecific
              service:
                identifier: main
                port: http
      tls:
        - secretName: dead-drop-tls
          hosts:
            - dead-drop.terence.cloud

libsql-server:
  global:
    fullnameOverride: "libsql-server"
  controllers:
    database:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/tursodatabase/libsql-server
            tag: v0.24.32@sha256:dedf5273da945d90f3b85fe367ed8f821349117ac2c488bf43c4a6bf9f2123e0
          ports:
            - name: http
              containerPort: 8080
          env:
            SQLD_HEARTBEAT_URL: "http://localhost:8080"
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health

  service:
    main:
      controller: database
      type: ClusterIP
      ports:
        http:
          port: 8080

  persistence:
    data:
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      # storageClass: longhorn
      advancedMounts:
        database:
          main:
            - path: /var/lib/sqld
