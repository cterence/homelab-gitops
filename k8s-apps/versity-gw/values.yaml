# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/common-3.7.3/charts/library/common/values.schema.json
app-template:
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      runAsUser: 1000
      runAsGroup: 100
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"

  configMaps:
    versity:
      data:
        VGW_HEALTH: /health
        VGW_REGION: eu-west-3
        VGW_METRICS_STATSD_SERVERS: 127.0.0.1:8125

    telegraf:
      data:
        telegraf.conf: |
          [[inputs.statsd]]
          protocol = "udp"
          service_address = ":8125"

          [[outputs.prometheus_client]]
          listen = ":9273"
          expiration_interval = "60s"
          collectors_exclude = ["gocollector", "process"]

          [[outputs.health]]
          service_address = "http://:8080"

  controllers:
    main:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/versity/versitygw
            tag: v1.0.17@sha256:a13b9adbda0ea9d4b1d929e4bed327e4eccc18d13c23f7e5d192d987dde5651d
          args:
            - posix
            - /buckets
            - --chuid
            - --chgid
          env:
            TZ: Europe/Paris
          envFrom:
            - configMapRef:
                identifier: versity
            - secretRef:
                name: versity-gw-credentials
          ports:
            - name: http
              containerPort: 7070
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health

        telegraf:
          image:
            repository: telegraf
            tag: 1.36.0@sha256:bfe0a116f05de4257c071e2b912b8835f4f894e5009324a8e881dbc1c257af10
          env:
            TZ: Europe/Paris
          ports:
            - name: health
              containerPort: 8080
            - name: input
              containerPort: 8125
            - name: metrics
              containerPort: 9273
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: health
                  path: /
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: health
                  path: /
    webdav:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
        webdav:
          image:
            repository: ghcr.io/cterence/apachewebdav
            tag: 2.4.65-bookworm@sha256:0aa4a0b399a5711005fcb38e8a6776f5518b18aa514f44f0da8e6fdb46333e77
          env:
            TZ: Europe/Paris
            UID: "1000"
            GID: "100"
            USERNAME: kindle
            NO_CHOWN_DATA: "true"
            PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-webdav-password"
                  key: password
          ports:
            - name: http
              containerPort: 80
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health

  service:
    main:
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 7070
    metrics:
      controller: main
      type: ClusterIP
      ports:
        metrics:
          port: 9273
    webdav:
      controller: webdav
      type: ClusterIP
      ports:
        http:
          port: 80

  ingress:
    main:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0,::/0"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      className: "nginx"
      hosts:
        - host: &host versity.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: versity-tls
          hosts:
            - *host
    webdav:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      className: "nginx"
      hosts:
        - host: &host versity.terence.cloud
          paths:
            - path: /webdav(/|$)(.*)
              pathType: ImplementationSpecific
              service:
                identifier: webdav
                port: http
      tls:
        - secretName: versity-tls
          hosts:
            - *host

  persistence:
    buckets:
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 2Gi
      advancedMounts:
        main:
          main:
            - path: /buckets
        webdav:
          webdav:
            - path: /var/lib/dav/data
              subPath: obsidian/Kindle

    telegraf-config:
      type: configMap
      identifier: telegraf
      advancedMounts:
        main:
          telegraf:
            - path: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf

  serviceMonitor:
    main:
      enabled: true
      serviceName: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-metrics'
      endpoints:
        - port: metrics
          scheme: http
          path: /metrics
          interval: 30s
          scrapeTimeout: 10s
