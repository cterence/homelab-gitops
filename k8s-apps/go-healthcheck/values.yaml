urls:
  - http://arr-stack-filebrowser-quantum.arr-stack:8080/health
  - http://arr-stack-flaresolverr.arr-stack:8191/health
  - http://kube-prometheus-stack-grafana.monitoring/api/health
  - http://oauth2-proxy.oauth2-proxy/ping
  - https://alertmanager.terence.cloud/-/healthy
  - https://argocd.terence.cloud/healthz?full=true
  - https://attic.terence.cloud
  - https://auth.terence.cloud/healthz
  - https://baz.terence.cloud/system/ping
  - https://bw.terence.cloud/alive
  # - https://calibre.terence.cloud/health
  - https://calibre.terence.cloud
  - https://calibredl.terence.cloud/request/api/status
  - https://convert.terence.cloud
  - https://ha.terence.cloud
  - https://httpbin.terence.cloud
  - https://immich.terence.cloud/api/server/ping
  - https://jf.terence.cloud/health
  - https://js.terence.cloud/api/v1/status
  - https://jstat.terence.cloud/auth/isconfigured
  - https://lid.terence.cloud/ping
  - https://longhorn.terence.cloud
  - https://next.terence.cloud/status.php
  - https://oc.terence.cloud/status
  - https://paperless.terence.cloud
  - https://prometheus.terence.cloud/-/healthy
  - https://qb.terence.cloud
  - https://rad.terence.cloud/ping
  - https://slskd.terence.cloud/health
  - https://son.terence.cloud/ping
  - https://tools.terence.cloud
  - https://versity.terence.cloud/health
  - https://z2m.terence.cloud

cnpgClusters:
  - name: attic-cnpg-cluster
    namespace: attic
  - name: arr-stack-cnpg-cluster-jellystat
    namespace: arr-stack
  - name: home-assistant-cnpg-cluster
    namespace: home-assistant
  - name: immich-cnpg-cluster-vectorchord
    namespace: immich
  - name: nextcloud-cnpg-cluster
    namespace: nextcloud
  - name: paperless-ngx-cnpg-cluster
    namespace: paperless-ngx
  - name: pocket-id-cnpg-cluster
    namespace: pocket-id
  - name: vaultwarden-cnpg-cluster
    namespace: vaultwarden

# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/library/common/values.schema.json
app-template:
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

  controllers:
    main:
      strategy: RollingUpdate
      type: deployment
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/cterence/go-healthcheck
            tag: latest@sha256:8428238c5da6cbb12c827cea6c430886e5d46deeb7adbec7d0f90b9a09942c78
            pullPolicy: Always
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 3000
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
  service:
    main:
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 3000

  ingress:
    main:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/limit-rpm: "10"
        nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
      className: "nginx"
      hosts:
        - host: &host health.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: health-tls
          hosts:
            - *host

  persistence:
    config:
      type: secret
      name: go-healthcheck-config
      advancedMounts:
        main:
          main:
            - path: /app/config.yaml
              readOnly: true
              subPath: config.yaml
    client-auth-cert:
      type: secret
      name: client-auth-cert
      advancedMounts:
        main:
          main:
            - path: /etc/ssl/private/tls.crt
              readOnly: true
              subPath: tls.crt
            - path: /etc/ssl/private/tls.key
              readOnly: true
              subPath: tls.key
