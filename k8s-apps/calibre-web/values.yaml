# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/common-3.7.3/charts/library/common/values.schema.json
# Removing Cloudflare caching was necessary, else any actions got me logged out : https://github.com/janeczku/calibre-web/issues/1466#issuecomment-1199885344
# Configure options applied to all pods
app-template:
  # defaultPodOptions:
  #   automountServiceAccountToken: false
  #   securityContext:
  #     runAsUser: 568
  #     runAsGroup: 568
  #     fsGroup: 568
  #     fsGroupChangePolicy: "OnRootMismatch"

  controllers:
    # Configure the main controller
    main:
      type: deployment
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: crocodilestick/calibre-web-automated
            tag: v2.0.1@sha256:252be12743b4dae4c731a1c01ae2004a848cb8315c88998a97be69de7fd0e416
          env:
            TZ: Europe/Paris
            DOCKER_MODS: "lscr.io/linuxserver/mods:universal-calibre-v7.16.0"
            LOG_LEVEL: DEBUG
          ports:
            - name: http
              containerPort: 8083
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP
            startup:
              enabled: true
              type: HTTP
              spec:
                failureThreshold: 15
    book-downloader:
      type: deployment
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - calibre-web
                topologyKey: kubernetes.io/hostname
      containers:
        main:
          image:
            repository: ghcr.io/calibrain/calibre-web-automated-book-downloader
            tag: 20250815@sha256:6b25a35de28e31e91f13a86d1be227ef9eb61c034c4d7edf27f09c5c07ab29c0
          env:
            TZ: Europe/Paris
            FLASK_PORT: 8084
            FLASK_DEBUG: false
            CLOUDFLARE_PROXY_URL: http://localhost:8000
            INGEST_DIR: /cwa-book-ingest
            BOOK_LANGUAGE: fr
            UID: "0"
            GID: "0"
            APP_ENV: prod
          ports:
            - name: http
              containerPort: 8084
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /api/status
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /api/status
        cloudflare-bypass:
          image:
            repository: ghcr.io/sarperavci/cloudflarebypassforscraping
            tag: latest@sha256:9ac4cd4d6d5dfc270a92502b92761d9039297abfb123f4a2a3abca5209d9eec5
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8000
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: http
            readiness:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: http

    webdav:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        webdav:
          image:
            repository: ghcr.io/cterence/apachewebdav
            tag: 2.4.65-bookworm@sha256:0aa4a0b399a5711005fcb38e8a6776f5518b18aa514f44f0da8e6fdb46333e77
          env:
            TZ: Europe/Paris
            UID: "1000"
            GID: "100"
            USERNAME: kindle
            NO_CHOWN_DATA: "true"
            PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-webdav-password"
                  key: password
          ports:
            - name: http
              containerPort: 80
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health

  service:
    main:
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 8083
    book-downloader:
      controller: book-downloader
      type: ClusterIP
      ports:
        http:
          port: 8084
    webdav:
      controller: webdav
      type: ClusterIP
      ports:
        http:
          port: 80

  ingress:
    main:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        # external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/proxy-body-size: 100m
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Calibre"
        gethomepage.dev/description: "A book library manager."
        gethomepage.dev/group: "Media"
        gethomepage.dev/icon: "calibre"
        # nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        # nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        # nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User
      className: "nginx"
      hosts:
        - host: &host1 calibre.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: calibre-tls
          hosts:
            - *host1
    book-downloader:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User
      className: "nginx"
      hosts:
        - host: &host2 calibredl.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: book-downloader
                port: http
      tls:
        - secretName: calibredl-tls
          hosts:
            - *host2
    webdav:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      className: "nginx"
      hosts:
        - host: &host3 calibre.terence.cloud
          paths:
            - path: /webdav(/|$)(.*)
              pathType: ImplementationSpecific
              service:
                identifier: webdav
                port: http
      tls:
        - secretName: calibre-tls
          hosts:
            - *host3

  persistence:
    # Configure the main configuration storage location
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 50Mi
      globalMounts:
        - path: /config
    calibre-library:
      enabled: true
      size: 10Gi
      accessMode: ReadWriteOnce
      type: persistentVolumeClaim
      advancedMounts:
        main:
          main:
            - path: /calibre-library
        webdav:
          webdav:
            - path: /var/lib/dav/data
              readOnly: true
    cwa-book-ingest:
      enabled: true
      size: 10Gi
      accessMode: ReadWriteOnce
      type: persistentVolumeClaim
      globalMounts:
        - path: /cwa-book-ingest
