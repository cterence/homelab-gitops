# https://github.com/truecharts/public/blob/master/charts/library/common/values.yaml
zigbee2mqtt:
  image:
    repository: docker.io/koenkk/zigbee2mqtt
    tag: "2.6.2@sha256:ffabf256f4550175278fbeebdbc3f174f2ffa005175e755324c5f06020af3e68"
    pullPolicy: IfNotPresent
  service:
    main:
      ports:
        main:
          port: 10103
  persistence:
    data:
      enabled: true
      mountPath: "/data"
      targetSelectAll: true
      size: 1Gi
    conbee-device:
      enabled: true
      type: hostPath
      hostPath: /dev/ttyACM0
      mountPath: /dev/ttyACM0
      hostPathType: "CharDevice"
  portal:
    open:
      enabled: true
  securityContext:
    container:
      runAsNonRoot: false
      readOnlyRootFilesystem: false
      runAsUser: 0
      runAsGroup: 0
      privileged: true
  workload:
    main:
      podSpec:
        initContainers:
          init-config:
            enabled: true
            imageSelector: image
            type: init
            env:
              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: "{{ .Values.service.main.ports.main.port }}"
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: "{{ .Values.workload.main.podSpec.containers.main.env.ZIGBEE2MQTT_CONFIG_PERMIT_JOIN }}"
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: "{{ .Values.workload.main.podSpec.containers.main.env.ZIGBEE2MQTT_CONFIG_MQTT_SERVER }}"
              ZIGBEE2MQTT_CONFIG_MQTT_USER: "{{ .Values.secret.ZIGBEE2MQTT_CONFIG_MQTT_USER }}"
              ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD: "{{ .Values.secret.ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD }}"
              ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC: "{{ .Values.workload.main.podSpec.containers.main.env.ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC }}"
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: "{{ .Values.workload.main.podSpec.containers.main.env.ZIGBEE2MQTT_CONFIG_SERIAL_PORT }}"
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: "{{ .Values.workload.main.podSpec.containers.main.env.ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER }}"
              USE_CUSTOM_CONFIG_FILE: "{{ .Values.workload.main.podSpec.containers.main.env.USE_CUSTOM_CONFIG_FILE }}"
            command:
              - /bin/sh
              - -c
            args:
              - >
                if [ -f /data/configuration.yaml ] || [ ${USE_CUSTOM_CONFIG_FILE} == true ]; then
                  echo "Initial configuration exists or User selected to use custom configuration file. Skipping...";
                else
                  echo "Creating initial configuration";
                  touch /data/configuration.yaml;
                  echo "# Configuration bellow will be always be overridden" >> /data/configuration.yaml;
                  echo "# from environment settings on the Scale Apps UI." >> /data/configuration.yaml;
                  echo "# You however will not see this values change in the file." >> /data/configuration.yaml;
                  echo "# It's a generated file based on the values provided on initial install." >> /data/configuration.yaml;
                  echo "##########################################################" >> /data/configuration.yaml;
                  echo "frontend:" >> /data/configuration.yaml;
                  echo "  port: $ZIGBEE2MQTT_CONFIG_FRONTEND_PORT" >> /data/configuration.yaml;
                  echo "permit_join: $ZIGBEE2MQTT_CONFIG_PERMIT_JOIN" >> /data/configuration.yaml;
                  echo "mqtt:" >> /data/configuration.yaml;
                  echo "  server: $ZIGBEE2MQTT_CONFIG_MQTT_SERVER" >> /data/configuration.yaml;
                  echo "  base_topic: $ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC" >> /data/configuration.yaml;
                  if [ ! -z "$ZIGBEE2MQTT_CONFIG_MQTT_USER" ];
                  then
                    echo "  user: $ZIGBEE2MQTT_CONFIG_MQTT_USER" >> /data/configuration.yaml;
                  fi;
                  if [ ! -z "$ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD" ];
                  then
                    echo "  password: $ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD" >> /data/configuration.yaml;
                  fi;
                  echo "serial:" >> /data/configuration.yaml;
                  echo "  port: $ZIGBEE2MQTT_CONFIG_SERIAL_PORT" >> /data/configuration.yaml;
                  echo "  adapter: $ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER" >> /data/configuration.yaml;
                  echo "##########################################################" >> /data/configuration.yaml;
                  echo 'Initial configuration file created at "/data/configuration.yaml"';
                fi;

        containers:
          main:
            env:
              ZIGBEE2MQTT_DATA: "/data"
              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: "{{ .Values.service.main.ports.main.port }}"
              # User defined
              USE_CUSTOM_CONFIG_FILE: false
              # This values are required for the autogenerated file to work.
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: false
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: "mqtt://mosquitto.mosquitto.svc.cluster.local"
              ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC: "zigbee2mqtt"
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: "/dev/ttyACM0"
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: "deconz"
              ZIGBEE2MQTT_CONFIG_MQTT_USER: ""
              ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD: ""
  TZ: Europe/Paris
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "httpbin/mtls-ca"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      ingressClassName: "nginx"
      hosts:
        - host: &host z2m.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: z2m-tls
          hosts:
            - *host
      integrations:
        traefik:
          enabled: false
  podOptions:
    nodeSelector:
      kubernetes.io/hostname: "homelab2"
