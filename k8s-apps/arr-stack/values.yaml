# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.4.0/charts/library/common/values.schema.json
app-template:
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
    nodeSelector:
      kubernetes.io/hostname: homelab2

  controllers:
    jellyfin:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
        jellyfin:
          image:
            repository: lscr.io/linuxserver/jellyfin
            tag: 10.10.6ubu2404-ls55@sha256:0b793d24dc3ec861e205ec3aceebe4021180d38a2f461522f1d83d992d4f053a
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8096
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              spec:
                httpGet:
                  port: http
                  path: /health
          securityContext:
            privileged: true

    jellyseerr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        jellyseerr:
          image:
            repository: fallenbagel/jellyseerr
            tag: 2.5.1@sha256:52ca0b18c58ec4e769b8acae9beaae37a520a365c7ead52b7fc3ba1c3352d1f0
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 5055
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /api/v1/status
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /api/v1/status
          securityContext:
            privileged: true

    sonarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        sonarr:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.14.2939-ls275@sha256:7fe49f99201de94a277c577dcce5ef8f1789ead1056c8cf758fac7bf4e601d16
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
          ports:
            - name: http
              containerPort: 8989
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping

    radarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        radarr:
          image:
            repository: lscr.io/linuxserver/radarr
            tag: 5.20.2.9777-ls264@sha256:23677e1cb09bd957796f4521748f0eff9eb65d883949c10442635eabe64b750a
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
          ports:
            - name: http
              containerPort: 7878
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping

    lidarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        lidarr:
          image:
            repository: lscr.io/linuxserver/lidarr
            tag: 2.9.6.4552-ls33@sha256:f3faffdc7143153f46c37388767975a131f0c57d4c73bdffa7338a1e9c5e7524
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
          ports:
            - name: http
              containerPort: 8686
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping

    prowlarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        prowlarr:
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 1.32.2.4987-ls109@sha256:18e9801e4509e45873c1adb03adf0bf718743ff5147e19b4cdf7626f8bd2f752
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
          ports:
            - name: http
              containerPort: 9696
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping

    bazarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        bazarr:
          image:
            repository: lscr.io/linuxserver/bazarr
            tag: v1.5.1-ls295@sha256:0b3e1b888615cbd32cf879963d041abcf863d15160a9ace2928039a7b00590ef
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
          ports:
            - name: http
              containerPort: 6767
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /ping

    configarr:
      type: cronjob
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      cronjob:
        schedule: "0 * * * *"
        successfulJobsHistory: 1
        failedJobsHistory: 1
      containers:
        configarr:
          image:
            repository: configarr/configarr
            tag: 1.13.1@sha256:2a384789192bc8fb255d233c14516c8a365c91982c97373ee493033f73dbfe2b
          env:
            TZ: Europe/Paris

    flaresolverr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
        flaresolverr:
          image:
            repository: ghcr.io/flaresolverr/flaresolverr
            tag: v3.3.21@sha256:f104ee51e5124d83cf3be9b37480649355d223f7d8f9e453d0d5ef06c6e3b31b
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8191
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  port: http
                  path: /health

    butlarr:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        butlarr:
          image:
            repository: trimforce/butlarr
            tag: 1.2.2@sha256:79742266eabf6972ae5f82cadf083ddfff4c0313ace80a0593766e8d52352b38
          env:
            TZ: Europe/Paris
            BUTLARR_INTERACTIVE_SETUP: "false"
            BUTLARR_CONFIG_FILE: "/app/config.yaml"

    qbittorrent:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        qbittorrent:
          image:
            repository: lscr.io/linuxserver/qbittorrent
            tag: 5.0.4-r0-ls385@sha256:e96547d93403d8e7bdb5c0005da24511fffff58ebedb2c87e5c360779f69cd1a
          env:
            TZ: Europe/Paris
            PUID: 1000
            PGID: 1000
            TORRENTING_PORT: 6887
          ports:
            - name: http
              containerPort: 8080
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP

        gluetun:
          dependsOn: qbittorrent
          image:
            repository: ghcr.io/qdm12/gluetun
            tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
          env:
            TZ: Europe/Paris
            VPN_SERVICE_PROVIDER: airvpn
            VPN_TYPE: wireguard
            VPN_INTERFACE: wg0
            SERVER_REGIONS: Europe
            WIREGUARD_ADDRESSES: 10.145.193.219/32,fd7d:76ee:e68f:a993:7c10:4d59:a5d7:9537/128
            FIREWALL_VPN_INPUT_PORTS: "6887"
          envFrom:
            - secretRef:
                name: gluetun-wg-keys
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            runAsUser: 0
            runAsGroup: 0
            privileged: true

  service:
    jellyfin:
      controller: jellyfin
      type: ClusterIP
      ports:
        http:
          port: 8096
    jellyseerr:
      controller: jellyseerr
      type: ClusterIP
      ports:
        http:
          port: 5055
    sonarr:
      controller: sonarr
      type: ClusterIP
      ports:
        http:
          port: 8989
    radarr:
      controller: radarr
      type: ClusterIP
      ports:
        http:
          port: 7878
    lidarr:
      controller: lidarr
      type: ClusterIP
      ports:
        http:
          port: 8686
    prowlarr:
      controller: prowlarr
      type: ClusterIP
      ports:
        http:
          port: 9696
    bazarr:
      controller: bazarr
      type: ClusterIP
      ports:
        http:
          port: 6767
    flaresolverr:
      controller: flaresolverr
      type: ClusterIP
      ports:
        http:
          port: 8191
    qbittorrent:
      controller: qbittorrent
      type: ClusterIP
      ports:
        http:
          port: 8080

  ingress:
    jellyfin:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
      className: "nginx"
      hosts:
        - host: &host jf.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: jellyfin
                port: http
      tls:
        - secretName: jellyfin-tls
          hosts:
            - *host

    jellyseerr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host js.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: jellyseerr
                port: http
      tls:
        - secretName: jellyseerr-tls
          hosts:
            - *host

    sonarr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host son.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: sonarr
                port: http
      tls:
        - secretName: sonarr-tls
          hosts:
            - *host

    radarr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host rad.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: radarr
                port: http
      tls:
        - secretName: radarr-tls
          hosts:
            - *host

    lidarr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host lid.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: lidarr
                port: http
      tls:
        - secretName: lidarr-tls
          hosts:
            - *host

    prowlarr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host prow.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: prowlarr
                port: http
      tls:
        - secretName: prowlarr-tls
          hosts:
            - *host

    bazarr:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host baz.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: bazarr
                port: http
      tls:
        - secretName: bazarr-tls
          hosts:
            - *host

    qbittorrent:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
        nginx.ingress.kubernetes.io/whitelist-source-range: "109.0.228.97/32,34.68.56.138/32"
      className: "nginx"
      hosts:
        - host: &host qb.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: qbittorrent
                port: http
      tls:
        - secretName: qbittorrent-tls
          hosts:
            - *host

  persistence:
    data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 650Gi
      advancedMounts:
        jellyfin:
          jellyfin:
            - path: /data/media
              subPath: media
        sonarr:
          sonarr:
            - path: /data
        radarr:
          radarr:
            - path: /data
        lidarr:
          lidarr:
            - path: /data
        bazarr:
          bazarr:
            - path: /data
        qbittorrent:
          qbittorrent:
            - path: /data/download
              subPath: download

    jellyfin-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      advancedMounts:
        jellyfin:
          jellyfin:
            - path: /config

    jellyfin-hwa:
      enabled: true
      type: hostPath
      hostPath: /dev/dri/renderD128
      hostPathType: "CharDevice"
      advancedMounts:
        jellyfin:
          jellyfin:
            - path: /dev/dri/renderD128

    jellyseerr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        jellyseerr:
          jellyseerr:
            - path: /app/config

    sonarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        sonarr:
          sonarr:
            - path: /config

    radarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        radarr:
          radarr:
            - path: /config

    lidarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        lidarr:
          lidarr:
            - path: /config

    butlarr-data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        butlarr:
          butlarr:
            - path: /app/data

    butlarr-config-secret:
      enabled: true
      type: secret
      name: butlarr-config
      defaultMode: 0400
      items:
        - key: config.yaml
          path: config.yaml
      advancedMounts:
        butlarr:
          butlarr:
            - path: /app/config.yaml
              subPath: config.yaml

    qbittorrent-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        qbittorrent:
          qbittorrent:
            - path: /config

    gluetun-device:
      enabled: true
      type: hostPath
      hostPath: /dev/net/tun
      hostPathType: "CharDevice"
      advancedMounts:
        qbittorrent:
          gluetun:
            - path: /dev/net/tun

    prowlarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        prowlarr:
          prowlarr:
            - path: /config

    bazarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        bazarr:
          bazarr:
            - path: /config

    configarr-cache:
      enabled: true
      type: emptyDir
      advancedMounts:
        configarr:
          configarr:
            - path: /app/repos
              subPath: configarr-repos

    configarr-config:
      type: configMap
      name: arr-stack-configarr-config
      advancedMounts:
        configarr:
          configarr:
            - path: /app/config/config.yml
              subPath: config.yml

    configarr-secrets:
      enabled: true
      type: secret
      name: configarr-secrets
      items:
        - key: secrets.yml
          path: secrets.yml
      advancedMounts:
        configarr:
          configarr:
            - path: /app/config/secrets.yml
              subPath: secrets.yml

  configMaps:
    configarr-config:
      data:
        config.yml: |
          trashGuideUrl: https://github.com/TRaSH-Guides/Guides
          recyclarrConfigUrl: https://github.com/recyclarr/config-templates

          sonarr:
            series:
              base_url: http://arr-stack-sonarr:8989
              api_key: !secret SONARR_API_KEY

              quality_definition:
                type: series

              include:
                - template: sonarr-quality-definition-series
                - template: sonarr-v4-quality-profile-web-1080p
                - template: sonarr-v4-custom-formats-web-1080p

              custom_formats: []

          radarr:
            movies:
              base_url: http://arr-stack-radarr:7878
              api_key: !secret RADARR_API_KEY

              include:
                - template: radarr-quality-definition-movie
                - template: radarr-quality-profile-hd-bluray-web
                - template: radarr-custom-formats-hd-bluray-web
                - template: radarr-quality-profile-remux-web-1080p
                - template: radarr-custom-formats-remux-web-1080p

              custom_formats: []
