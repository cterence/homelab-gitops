# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.4.0/charts/library/common/values.schema.json
app-template:
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

  controllers:
    jellyfin:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
        jellyfin:
          image:
            repository: lscr.io/linuxserver/jellyfin
            tag: 10.10.6@sha256:c7d4dec91cfd474c65d515e6ef926933b673c310c494f565c01022b16c533e31
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8096
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP
    sonarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        sonarr:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.13@sha256:49a8e636fd4514b23d37c84660101fecbb632174ba0569e0f09bbd2659a2a925
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8989
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP

    prowlarr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        prowlarr:
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 1.31.2@sha256:761f73534a01aec4bf72a1396e9b9fda3f01632948b3fa31985982d26120a330
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 9696
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP

    flaresolverr:
      type: deployment
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
        flaresolverr:
          image:
            repository: ghcr.io/flaresolverr/flaresolverr
            tag: v3.3.21@sha256:f104ee51e5124d83cf3be9b37480649355d223f7d8f9e453d0d5ef06c6e3b31b
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8191
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP

    qbittorrent:
      type: deployment
      strategy: Recreate
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        qbittorrent:
          image:
            repository: lscr.io/linuxserver/qbittorrent
            tag: 5.0.4@sha256:81a71641d2ee65fbecfabf3388f0d6b7b053e7266658b1fb7efee8900d06f010
          env:
            TZ: Europe/Paris
          ports:
            - name: http
              containerPort: 8080
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP

  service:
    jellyfin:
      controller: jellyfin
      type: ClusterIP
      ports:
        http:
          port: 8096
    sonarr:
      controller: sonarr
      type: ClusterIP
      ports:
        http:
          port: 8989
    prowlarr:
      controller: prowlarr
      type: ClusterIP
      ports:
        http:
          port: 9696
    flaresolverr:
      controller: flaresolverr
      type: ClusterIP
      ports:
        http:
          port: 8191
    qbittorrent:
      controller: qbittorrent
      type: ClusterIP
      ports:
        http:
          port: 8080

  ingress:
    jellyfin:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud
      className: "nginx"
      hosts:
        - host: &host jf.terence.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: jellyfin-tls
          hosts:
            - *host

  persistence:
    jellyfin-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 50Mi
      advancedMounts:
        jellyfin:
          jellyfin:
            - path: /config
    sonarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 50Mi
      advancedMounts:
        sonarr:
          sonarr:
            - path: /config
    qbittorrent-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 50Mi
      advancedMounts:
        qbittorrent:
          qbittorrent:
            - path: /config
    prowlarr-config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 50Mi
      advancedMounts:
        prowlarr:
          prowlarr:
            - path: /config
    data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteMany
      size: 100Gi
      globalMounts:
        - path: /data
